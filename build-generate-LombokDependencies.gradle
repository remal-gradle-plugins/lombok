generateSources.forMainSourceSet.java {
    inputs.files(configurations.lombokCoreArtifacts).withPropertyName('lombokCoreArtifacts')
    inputs.files(configurations.lombokAddonsArtifacts).withPropertyName('lombokAddonsArtifacts').optional()

    classFile(project.calculateBaseJavaPackage(), 'LombokDependencyType') {
        block("enum ${simpleName}") {
            line("CORE,")
            line("ADDON,")
            line(";")
        }
    }

    classFile(project.calculateBaseJavaPackage(), 'LombokDependency') {
        addImport("lombok.Builder")
        addImport("lombok.Value")

        line("@Value")
        line("@Builder")
        block("class ${simpleName}") {
            line("LombokDependencyType type;")
            line("String group;")
            line("String name;")
            line("String version;")
        }
    }

    classFile(project.calculateBaseJavaPackage(), 'LombokDependencies') {
        addStaticImport("lombok.AccessLevel", "PRIVATE")

        addImport("com.google.common.collect.ImmutableMap")
        addImport("java.util.Map")
        addImport("lombok.NoArgsConstructor")

        line("@NoArgsConstructor(access = PRIVATE)")
        block("abstract class ${simpleName}") {
            line("")
            line("private static final Map<String, LombokDependency> MAPPING = ImmutableMap.<String, LombokDependency>builder()")
            indent {
                configurations.lombokCoreArtifacts.dependencies.forEach { Dependency dep ->
                    line(".put(\"${escapeString(dep.name)}\", LombokDependency.builder()")
                    line("    .type(LombokDependencyType.CORE)")
                    line("    .group(\"${escapeString(dep.group)}\")")
                    line("    .name(\"${escapeString(dep.name)}\")")
                    line("    .version(\"${escapeString(dep.version)}\")")
                    line("    .build()")
                    line(")")
                }
                configurations.lombokAddonsArtifacts.dependencies.forEach { Dependency dep ->
                    line(".put(\"${escapeString(dep.name)}\", LombokDependency.builder()")
                    line("    .type(LombokDependencyType.ADDON)")
                    line("    .group(\"${escapeString(dep.group)}\")")
                    line("    .name(\"${escapeString(dep.name)}\")")
                    line("    .version(\"${escapeString(dep.version)}\")")
                    line("    .build()")
                    line(")")
                }
                line(".build();")
            }

            line("")
            block("public static Map<String, LombokDependency> getLombokDependencies()") {
                line("return MAPPING;")
            }

            line("")
            block("public static LombokDependency getLombokDependency(String id)") {
                line("var dependency = getLombokDependencies().get(id);")
                block("if (dependency == null)") {
                    line("throw new IllegalStateException(\"Lombok dependency is not registered: \" + id);")
                }
                line("return dependency;")
            }
        }
    }
}
